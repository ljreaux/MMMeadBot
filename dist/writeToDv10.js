"use strict";var c=Object.create;var n=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var m=(e,r)=>{for(var t in r)n(e,t,{get:r[t],enumerable:!0})},a=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of g(r))!h.call(e,o)&&o!==t&&n(e,o,{get:()=>r[o],enumerable:!(s=l(r,o))||s.enumerable});return e};var d=(e,r,t)=>(t=e!=null?c(u(e)):{},a(r||!e||!e.__esModule?n(t,"default",{value:e,enumerable:!0}):t,e)),p=e=>a(n({},"__esModule",{value:!0}),e);var F={};m(F,{dv10Url:()=>f,fetchCloudinaryImages:()=>y,fetchMemes:()=>E,shadowHiveUrl:()=>w,writeToTextFile:()=>v});module.exports=p(F);var i=d(require("fs")),f="https://cloudinary-dv10-api.vercel.app/api/list-media",w="https://shadowhive-api.vercel.app/api/list-media",y=async e=>{try{let r=await fetch(e);if(!r.ok)throw new Error(`Failed to fetch images: ${r.statusText}`);return(await r.json()).resources.filter(o=>o.secure_url).map(o=>o.secure_url)}catch(r){return console.error("Error fetching Cloudinary images:",r),[]}},v=async(e,r)=>{try{let t=e.join(`
`);i.default.writeFileSync(r,t),console.log(`Images written to ${r}`)}catch(t){console.error("Error writing to file:",t)}},x=e=>{try{return i.default.readFileSync(e,"utf8").split(`
`)}catch(r){return console.error(r),[]}},E=async e=>{try{let r=x(e);if(r.length){let t=Math.floor(Math.random()*r.length),s=r[t];if(!s)throw new Error("File error.");return s}else throw new Error("No images found in the Cloudinary folder.")}catch(r){return console.error(r),"No images available."}};0&&(module.exports={dv10Url,fetchCloudinaryImages,fetchMemes,shadowHiveUrl,writeToTextFile});
